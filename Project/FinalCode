---
title: "STAT 6021: Project 1 - Report"
author: 
 - 'Group 10: Alexa Owen (amo9f), Karolina Straznikiewicz (ssj9sw)'
 - 'Fadumo Hussein (fmh7pv), Kaleigh O’Hara (ear3cg)'
date: "06/26/2023"
fontsize: 11pt
geometry: margin=0.5in
urlcolor: black
output:
  pdf_document: default
  word_document: default
header-includes:
- \usepackage{setspace}
- \onehalfspacing
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r,echo=FALSE, warning=FALSE, results='hide', message=FALSE}
#packages 

library(dbplyr)
library(ggplot2)
library(tidyverse)
library(ggthemes)
library(patchwork)
library(cowplot)
Data = read.csv("/Users/alexaowen/Documents/Grad School/Summer 2023/STAT 6021/Project 1/diamonds4.csv")
```

# Summary 

Embarking on the journey of buying an engagement ring is a profound expression of love and commitment. With each step, from exploring various designs to selecting the perfect diamond, the anticipation builds, mirroring the excitement of a future together. As the ring takes shape, so does the anticipation of that magical moment when two souls unite in an everlasting promise, sealed with a ring as timeless as their love.

But how do we choose the best diamond possible? Especially since diamonds may be a girl's best friend, but they do have a knack for giving your credit card a run for its money.
Blue Nile, a prominent online jewelry retailer specializing in diamonds and engagement rings, makes several claims regarding diamond characteristics. However, our analysis of 1,214 diamonds from their website yielded mixed results. While the data supports the claim that higher carat weight enhances the visibility of diamond characteristics, such as clarity, for diamonds of Flawless (FL) clarity level, this claim does not hold true for diamonds of lower clarity levels. Similarly, the claim that diamond cut influences its color did not show strong trends in the data, except for Blue Nile's specific cut, the Astor Ideal. Additionally, contrary to Blue Nile's claim that diamond cut drives the price, we found that the median cost by cut was not significantly different for most cuts, except for the Astor Ideal.

Nevertheless, our analysis did confirm that diamonds with better color tend to receive higher clarity grades, and diamond cut can indeed hide certain undesirable characteristics. However, the driving factor behind diamond price remains elusive.

Digging deeper into Blue Nile's data, we discovered a significant relationship between carat size and price. Diamonds with a carat size of 0.4 showed significantly lower prices compared to those with a carat value of 0.5. Concluding from the analysis, for every 1% increase in carat size, the price of the diamond rose by approximately 2%. This means that even a small increase in weight, such as 1 milligram for a one carat (200 milligrams) diamond worth $10,000, could cause the price to jump by $200.

So, in the dazzling world of diamonds, remember that size matters—because a bigger carat weight brings the bling that makes hearts sing!

\newpage


# Data Description

### Data Set

This data set contains information on 1,214 diamonds available for sale on **[Blue Nile]** (http://www.bluenile.com), a renowned online diamond retailer. The data set encompasses various attributes of the diamonds, including carat weight, clarity, color, cut, and price. The data was collected from **Blue Nile's** website, capturing a diverse range of diamonds offered by the company.

**Blue Nile** is a prominent online jewelry retailer specializing in diamonds and engagement rings. Established in 1999, it has become a trusted destination for customers seeking high-quality diamonds at competitive prices. **Blue Nile** offers a wide selection of certified diamonds sourced from reputable suppliers around the world. 

Please note that while this data set primarily originates from **Blue Nile**, additional internet resources were utilized to complete it.

### Variables

This report aims to investigate the relationship between diamond characteristics and the average price per diamond. In addition, the study focuses on the relationship between diamond chracteristics. The data set used consists of observations on various diamonds, with each observation representing a single diamond. 

+ ***price*** (numeric in dollars) - **Response variable in regression question** 
  + The price of a diamond
  
+ ***carat*** (numeric) - **Predictor variable in regression question**
  + Carat weight refers to the measurement of a diamond's mass, with one carat equivalent to 200 milligrams or 0.2 grams, and is often used as an indicator of a diamond's size or perceived value.
  
+ **carat.cat** (categorical) 
  + (-Inf, .4, .52, 1, Inf)
  
  + The quartile that the diamond's corresponding carat value falls in comparison to the rest of the data set.
  + **Levels**:
    + "4th quartile" - Diamonds that fall in the top 25% in terms of carat value in the data set. These diamonds were more than 1 carat.
    + "3rd quartile" - Diamonds that fall in the top 50% in terms of carat value in the data set. These diamonds were more than .52 carats and less than or equal to 1 carat.
    + "2nd quartile" - Diamonds that fall in the top 75% in terms of carat value in the data set. These diamonds were more than .4 carats and less than or equal to .52 carats.
    + "1st quartile" - Diamonds that fall in the bottom 25% of carat value in the data set. These diamonds were less than or equal to .4 carats.
  
+ **clarity** (categorical) 
  + Clarity of a diamond refers to the presence or absence of internal and external flaws. It is evaluated on a scale of various levels of clarity grades, impacting the diamond's overall visual appearance and value. Diamonds surface flaws are called blemishes, while internal defects are known as inclusions.
  + **Levels**: 
    + "FL"  are Flawless (FL) Diamonds - no internal or external characteristics - very rare
    + "IF" are Internally Flawless (IF) Diamonds - have no inclusions within the stone
    + "VVS1" and "VVS2" are Very, Very Slightly Included (VVS) Diamonds 
    + "VS1" and "VS2" are  Very Slightly Included (VS) Diamonds
    + "SI1" and "SI2" are Slightly Included (SI) Diamonds
  
+ **color** (categorical)
  + Color of a diamond refers to the presence or absence of any noticeable tint or hue within the stone. Diamond color is graded on a scale from D (colorless) to Z (light yellow or brown), with higher grades indicating a more colorless and desirable diamond.
  + **Levels**: 
    + "D" - Absolutely Colorless 
    + "E" - Colorless
    + "F" - Colorless 
    + "G" - Near Colorless
    + "H" - Near Colorless (faint yellow hue) 
    + "I" - Near Colorless (slight yellow)
    + "J" - Near Colorless (light yellow tone) 
    + "K" - Faint
  
+ **cut** (categorical)
  + Cut of a diamond refers to the quality of how the diamond was shaped. A well-cut diamond reflects light very well, resulting in enhanced sparkle and a higher value, while a poorly cut diamond may appear dull and less captivating.
  + **Levels**: 
    + "Astor Ideal" - Cut from the finest raw material, crafted to gather and reflect the most light possible.
    + "Ideal" - 3% of diamond cut quality. It reflects most of the light that enters the diamond.
    + "Very Good" - 15% of diamond cut quality. It reflects nearly as much light as the ideal cut.
    + "Good" - 25% of diamond cut quality. It reflects most of the light that enters, but not as much as a Very Good cut grade.


# Data Visualization

With the goal of understanding what characteristics influence diamond price and whether or not diamond characteristics depend on one another, we analyze univariate, bivariate, and multivariate visualizations of the price, clarity, cut, color, and carat of diamonds. 

```{r,echo=FALSE, warning=FALSE, results='hide', message=FALSE}
Data$clarity = as.factor(Data$clarity)
Data$color = as.factor(Data$color)
Data$cut = as.factor(Data$cut)

Data$clarity<-factor(Data$clarity, 
                     levels=c("SI1","SI2","VS1","VS2","VVS1","VVS2", "IF","FL"))

#levels(Data$clarity)

Data$cut<-factor(Data$cut, 
                     levels=c("Good", "Very Good", "Ideal","Astor Ideal"))

#levels(Data$cut)

Data$color<-factor(Data$color, 
                     levels=c("K","J","I","H","G","F","E","D"))

#levels(Data$color)

Data <- Data %>%
  mutate(carat.cat = cut(carat, breaks =c(-Inf, .4, .52, 1, Inf), labels = c("1st Quartile", "2nd Quartile", "3rd Quartile", "4th Quartile")))
```

To complete this analysis, the Graphs 1, 2, 3, and 4 display the distribution of diamonds by clarity, cut, color and carat, respectively. The variety of metrics in the graphs (count, price, average price, and median price) provides comprehensive insight into how (if at all) the diamond characteristic and price are related.

### Price by Clarity 

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 4, fig.width = 6, fig.align='center'}
clarityprice1 = ggplot(Data, aes(x = clarity)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none") +
  geom_bar(fill = "blue4", alpha = 0.7) +
  labs(title = "Count Plot of Clarity",
       x = "Clarity Level",
       y = "Count") +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))

clarityprice2 = ggplot(Data, aes(x = clarity, y = price)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12,face = "bold"),
        legend.title = element_blank(),
        legend.position = "none") +
  geom_point(color = "blue4", alpha = 0.7, size = 2)+
  labs(title = "Price Distribution by Clarity",
       x = "Clarity Level",
       y = "Price") +
  scale_y_continuous(labels = scales::comma, breaks = seq(0, max(Data$price), by = 50000)) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray")) 

avg_price_by_clarity <- Data %>%
  group_by(clarity) %>%
  summarise(avg_price = mean(price))

clarityprice3 = ggplot(avg_price_by_clarity, aes(x = clarity, y = avg_price)) +
  geom_bar(stat = "identity", fill = "blue4", alpha = 0.7) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none") +
  labs(title = "Average Price by Clarity",
       x = "Clarity Level",
       y = "Average Price") +
  scale_y_continuous(labels = scales::comma) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))

median_price_by_clarity <- Data %>%
  group_by(clarity) %>%
  summarise(median_price = median(price))

clarityprice4 = ggplot(median_price_by_clarity, aes(x = clarity, y = median_price)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none",
        panel.border = element_blank()) +
  geom_point(color = "blue4", alpha = 0.7, size = 3) +
  labs(title = "Median Price by Clarity",
       x = "Clarity Level",
       y = "Median Price") +
  scale_y_continuous(labels = scales::comma) +
  theme(panel.grid.major = element_line(color = "lightgray"),
        panel.border = element_blank())

patchwork1 = (clarityprice1 | clarityprice2) / (clarityprice3 | clarityprice4)
patchwork1 + plot_annotation(tag_levels = c('1'), tag_prefix = 'Fig. ',
                            tag_sep = '.', tag_suffix = ':',
                            title = 'Graph 1') &
   theme(plot.tag.position = c(0, 1),
        plot.tag = element_text(size = 8, hjust = 0, vjust = 0))
```

It is evident in Graph 1 that there are no clear trends indicating significant price differences based on the clarity of diamonds. However, it is worth noting that Flawless (FL) diamonds appear to be the most expensive overall, exhibiting the highest average, median, and singular prices. Nevertheless, it is important to consider that the dataset contains only a limited number of flawless diamonds, resulting in a few data points that heavily skew the overall data. Apart from this observation, all other clarity levels demonstrate similar pricing levels.

This finding suggests that while clarity can play a role in determining a diamond's price, it may not be the sole influential factor. 

### Price by Cut

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 4, fig.width = 6, fig.align='center'}
cutplot1 = ggplot(Data, aes(x = cut)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none") +
  geom_bar(fill = "blue4", alpha = 0.7) +
  labs(title = "Count Plot of Cut",
       x = "Cut Level",
       y = "Count") +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))

cutplot2 = ggplot(Data, aes(x = cut, y = price)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12,face = "bold"),
        legend.title = element_blank(),
        legend.position = "none") +
  geom_point(color = "blue4", alpha = 0.7, size = 2)+
  labs(title = "Price Distribution by Cut",
       x = "Cut Level",
       y = "Price") +
  scale_y_continuous(labels = scales::comma, breaks = seq(0, max(Data$price), by = 50000)) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray")) 

avg_price_by_cut2 <- Data %>%
  group_by(cut) %>%
  summarise(avg_price = mean(price))

cutplot3 = ggplot(avg_price_by_cut2, aes(x = cut, y = avg_price)) +
  geom_bar(stat = "identity", fill = "blue4", alpha = 0.7) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none") +
  labs(title = "Average Price by Cut",
       x = "Cut Level",
       y = "Average Price") +
  scale_y_continuous(labels = scales::comma) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))

median_price_by_cut <- Data %>%
  group_by(cut) %>%
  summarise(median_price = median(price))

cutplot4=ggplot(median_price_by_cut, aes(x = cut, y = median_price)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none") +
  geom_point(color = "blue4", alpha = 0.7, size = 3) +
  labs(title = "Median Price vs Cut",
       x = "Cut Level",
       y = "Median Price") +
  scale_y_continuous(labels = scales::comma) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))

patchwork2 = (cutplot1 | cutplot2) / (cutplot3 | cutplot4)
patchwork2 + plot_annotation(tag_levels = c('1'), tag_prefix = 'Fig. ',
                            tag_sep = '.', tag_suffix = ':',
                            title = 'Graph 2') &
   theme(plot.tag.position = c(0, 1),
        plot.tag = element_text(size = 8, hjust = 0, vjust = 0))
```

Blue Nile claims, "the cut of the diamond that can be the biggest factor in the price tag." Given this statement, the analysis of Graph 2 reveals interesting findings regarding the cut of diamonds. It is noteworthy that the majority of diamonds available for sale on the website were classified as having an ideal cut. Surprisingly, as the cut quality progresses from good to very good, ideal, and Astor Ideal, the average and median prices show a decreasing trend. However, there is one exception to this pattern, with Astor Ideal diamonds having the highest median price among all cuts (but only a few observations in data set). The general indirect relationship between cut quality and diamond price debunks that Blue Nile's claim of cut driving diamond price. Upon examining the scatterplot, it becomes evident that a significant number of diamonds cluster within the price range of 0 to 50k dollars. However, it is interesting to note that there are instances of individual diamonds with better cuts that have substantially higher prices. While the majority of diamonds fall within a certain price range, diamonds with superior cuts can command significantly higher prices. 

### Price by Color

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 4, fig.width = 6, fig.align='center'}
colorplot1 = ggplot(Data, aes(x = color)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none") +
  geom_bar(fill = "blue4", alpha = 0.7) +
  labs(title = "Count Plot of Color",
       x = "Color Level",
       y = "Count") +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))

colorplot2 = ggplot(Data, aes(x = color, y = price)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12,face = "bold"),
        legend.title = element_blank(),
        legend.position = "none") +
  geom_point(color = "blue4", alpha = 0.7, size = 2)+
  labs(title = "Price Distribution by Color",
       x = "Color Level",
       y = "Price") +
  scale_y_continuous(labels = scales::comma, breaks = seq(0, max(Data$price), by = 50000)) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray")) 

avg_price_by_clarity3 <- Data %>%
  group_by(color) %>%
  summarise(avg_price = mean(price))

colorplot3 = ggplot(avg_price_by_clarity3, aes(x = color, y = avg_price)) +
  geom_bar(stat = "identity", fill = "blue4", alpha = 0.7) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none") +
  labs(title = "Average Price by Color",
       x = "Color Level",
       y = "Average Price") +
  scale_y_continuous(labels = scales::comma) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))

median_price_by_color <- Data %>%
  group_by(color) %>%
  summarise(median_price = median(price))

colorplot4 = ggplot(median_price_by_color, aes(x = color, y = median_price)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none") +
  geom_point(color = "blue4", alpha = 0.7, size = 3) +
  labs(title = "Median Price vs Color",
       x = "Color Level",
       y = "Median Price") +
  scale_y_continuous(labels = scales::comma) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))

patchwork3 = (colorplot1 | colorplot2) / (colorplot3 | colorplot4)
patchwork3 + plot_annotation(tag_levels = c('1'), tag_prefix = 'Fig. ',
                            tag_sep = '.', tag_suffix = ':',
                            title = 'Graph 3') &
   theme(plot.tag.position = c(0, 1),
        plot.tag = element_text(size = 8, hjust = 0, vjust = 0))

```

The analysis of Graph 3 reveals a notable trend regarding the color of diamonds and its impact on pricing. There is a clear rising pricing trend as the color of diamonds improves. This suggests that consumers are willing to pay more for diamonds with better color grades, which typically exhibit a higher level of colorlessness. Similar to previous observations, a significant number of diamonds cluster within the 0 to 50k price range. This finding aligns with the understanding that most buyers have a budget or a general price range in mind when purchasing a diamond. Both the average and median prices for diamonds increase as the color grade improves. This indicates that color plays a substantial role in determining the value and price of a diamond. However, there is one exception to this trend, namely the J-color category. Diamonds with a J-color grade have a surprisingly high median price. This observation suggests that individuals may be willing to sacrifice color in favor of obtaining a larger stone size while still managing to save money on color. This outlier suggests that a characteristic besides color can strongly influence price.

### Price by Carat
```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 4, fig.width = 6, fig.align='center'}
Data <- Data %>%
  mutate(carat.cat2 = cut(carat, breaks =c(-Inf, .4, .52, 1, Inf), labels = c("1st", "2nd", "3rd", "4th")))

caratplot1 = ggplot(Data, aes(x = carat.cat2)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none") +
  geom_bar(fill = "blue4", alpha = 0.7) +
  labs(title = "Count Plot of Carat Category",
       x = "Carat Quartile",
       y = "Count") +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))

caratplot2 = ggplot(Data, aes(x = carat, y = price)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12,face = "bold"),
        legend.title = element_blank(),
        legend.position = "none") +
  geom_point(color = "blue4", alpha = 0.7, size = 2)+
  geom_smooth(method=lm,color="#EB5F0C",alpha=0.5,se = FALSE)+
  labs(title = "Price Distribution by Carat",
       x = "Carat Quartile",
       y = "Price") +
  scale_y_continuous(labels = scales::comma, breaks = seq(0, max(Data$price), by = 50000)) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray")) 

avg_price_by_carat3 <- Data %>%
  group_by(carat.cat2) %>%
  summarise(avg_price = mean(price))

caratplot3 = ggplot(avg_price_by_carat3, aes(x = carat.cat2, y = avg_price)) +
  geom_bar(stat = "identity", fill = "blue4", alpha = 0.7) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none") +
  labs(title = "Average Price by Carat Category",
       x = "Carat Quartile",
       y = "Average Price") +
  scale_y_continuous(labels = scales::comma) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))

median_price_by_carat <- Data %>%
  group_by(carat.cat2) %>%
  summarise(median_price = median(price))

caratplot4 = ggplot(median_price_by_carat, aes(x = carat.cat2, y = median_price)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none") +
  geom_point(color = "blue4", alpha = 0.7, size = 3) +
  labs(title = "Median Price vs Carat Category",
       x = "Carat Quartile",
       y = "Median Price") +
  scale_y_continuous(labels = scales::comma) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))

patchwork4 = (caratplot1 | caratplot2) / (caratplot3 | caratplot4)
patchwork4 + plot_annotation(tag_levels = c('1'), tag_prefix = 'Fig. ',
                            tag_sep = '.', tag_suffix = ':',
                            title = 'Graph 4') &
   theme(plot.tag.position = c(0, 1),
        plot.tag = element_text(size = 8, hjust = 0, vjust = 0))
```

**Correlation of Price and Carat**

```{r,echo=FALSE, warning=FALSE, message=FALSE}
cor (Data$price, Data$carat)
```
The analysis of Graph 4 and high, positive correlation value reveals a clear and significant rising trend between the carat weight of diamonds and their prices. As the number of carats increases, the pricing also increases, indicating that diamond buyers are willing to pay more for larger stones. Consistently, the heaviest diamonds in terms of carat weight exhibit substantially higher prices compared to smaller diamonds. This finding aligns with the understanding that larger diamonds are rarer and more coveted, leading to a higher market value. The data set also reveals that most diamonds purchased by buyers are within the range of 0 to 2 carats, indicating a common preference (or financial restraint) for diamonds of this size. These findings emphasize the significant impact of carat weight on diamond pricing.

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 3.5, fig.width = 6,fig.align='center'}
Data <- Data %>%
  mutate(carat.cat = cut(carat, breaks =c(-Inf, .4, .52, 1, Inf)))
ggplot(subset(Data, !is.na(carat)), aes(x=carat, y=price, color = cut))+
  geom_point()+
  scale_size(range=c(0.1,12))+
  labs(title = "Graph 5 \nDiamond Carat vs. Diamond Price by Diamond Cut",
       x = "Carat",
       y = "Price")+
  scale_fill_manual(values = c("#EB5F0C", "#DF1E43", "#009FDF", "#FDDA24", "#25CAD3", "#EF3F6B", "#62BB46","blue4")) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))
```
To further debunk Blue Nile's claim that "cut drives the price of the diamond" and to confirm that instead carat has a stronger relationship with price, we create a multivariate scatter plot to analyze how carat, cut and price relate to one another.
As expected, the price of the diamond tends to increase as the carat size increases. However, there does not appear to be a consistent pattern with the diamond's cut as price and carat increase. Therefore, graphs 10 and 11 indicate that Blue Nile's implication that cut drives price can be debunked. Instead, it appears that the diamond's carat weight is what drives the cost of the diamond. 

## Investigation of Blue Nile's Claims

```{r, echo=FALSE, warning=FALSE, message=FALSE,fig.height = 4,fig.align='center'}
# claimplot1 = ggplot(Data, aes(x = color, y = carat, fill = color)) +
#   theme_minimal() +
#   theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
#         axis.text = element_text(size = 8, face = "bold"),
#         axis.title = element_text(size = 12, face = "bold"),
#         legend.position = "none") +
#   geom_violin() +
#   labs(title = "Carat vs Color",
#        x = "",
#        y = "Carat",
#        fill = "Color") +
#   scale_fill_manual(values = c("#EB5F0C", "#DF1E43", "#009FDF", "#FDDA24", "#25CAD3", "#EF3F6B", "#62BB46")
#   ) +
#   theme(#plot.background = element_rect(fill = "white"),
#         panel.grid.major = element_line(color = "lightgray"))
# 
# claimplot2 = ggplot(Data, aes(x = color, fill = carat.cat2)) +
#   theme_minimal() +
#   theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
#         axis.text = element_text(size = 8, face = "bold"),
#         axis.title = element_text(size = 12, face = "bold"),
#         legend.title = element_text(size = 10, face = "bold"),
#         legend.position = "bottom") +
#   geom_bar(position = "fill") +
#   labs(title = "Color by Carat",
#        x = "",
#        y = "Count",
#        fill = "Carat") +
#   scale_fill_manual(values = c("#FDDA24", "#25CAD3", "#EF3F6B", "#62BB46")) +
#   theme(#plot.background = element_rect(fill = "white"),
#         panel.grid.major = element_line(color = "lightgray"))
# 
# patchwork5 = (claimplot1 | claimplot2)
# patchwork5 + plot_annotation(tag_levels = c('1'), tag_prefix = 'Fig. ',
#                             tag_sep = '.', tag_suffix = ':',
#                             title = 'Graph 5') &
#    theme(plot.tag.position = c(0, 1),
#         plot.tag = element_text(size = 8, hjust = 0, vjust = 0))
```
Blue Nile claims that as you go up in carat weight, other characteristics become more visible, implying that diamonds of higher carat weight, are the more obvious blemishes. Therefore, one can assume that buyers andsellers prioritize high clarity for diamonds of a higher carat. Graph 6 shows that of diamonds with the highest clarity, Flawless (FL), over 50% were in the highest carat quartile as well. However, in all other categories, there is no distinct difference in the distribution of carat and level of clarity. This leads to the hypothesis that for a diamond’s carat to have an effect on its clarity, the diamond needs to be over 1 carat. To see how combinations of carat and clarity interact with price of the diamond, a scatter plot is created.

### Claim 1

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 3.5, fig.width = 5, fig.align='center'}

claim2plot1 = ggplot(subset(Data, !is.na(carat.cat)), aes(x=clarity, fill=carat.cat2))+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.title = element_text(size = 10, face = "bold"),
        legend.position = "bottom") +
  geom_bar(position = "fill") +
  labs(title = "Graph 6 \n Distribution of Carat Quartile for Each Clarity",
       x = "Clarity",
       y = "Proportion of Diamonds",
       fill = "Carat Quartile") +
  scale_fill_manual(values = c("#EB5F0C", "#DF1E43", "#009FDF", "#FDDA24", "#25CAD3", "#EF3F6B", "#62BB46","blue4")) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))

claim2plot1

#ggplot(subset(Data, !is.na(carat.cat)), aes(x=clarity, fill=carat.cat2))+
#  geom_bar(position = "fill")+
# theme(plot.title = element_text(hjust = 0.5))+
# labs(x = "Clarity", y = "Proportion of Diamonds", title = "Diamond Clarity vs. Diamond Carat")

# claim2plot2 = ggplot(subset(Data, !is.na(carat.cat2)), aes(x=carat.cat2, fill=clarity))+
#   theme_minimal() +
#   theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
#         axis.text = element_text(size = 8, face = "bold"),
#         axis.title = element_text(size = 12, face = "bold"),
#         legend.title = element_text(size = 10, face = "bold"),
#         legend.position = "bottom") +
#   geom_bar(position = "fill") +
#   labs(title = "Diamond Clarity vs. Diamond Carat",
#        x = "Carat Quartile",
#        y = "Proportion of Diamonds",
#        fill = "Clarity") +
#   scale_fill_manual(values = c("#EB5F0C", "#DF1E43", "#009FDF", "#FDDA24", "#25CAD3", "#EF3F6B", "#62BB46","blue4")) +
#   theme(#plot.background = element_rect(fill = "white"),
#         panel.grid.major = element_line(color = "lightgray"))

#ggplot(subset(Data, !is.na(carat.cat2)), aes(x=carat.cat2, fill=clarity))+
#  geom_bar(position = "fill")+
#  theme(plot.title = element_text(hjust = 0.5))+
#  labs(x = "Clarity", y = "Proportion of Diamonds", title = "Diamond Clarity vs. Diamond Carat")

# patchwork6 = (claim2plot1 | claim2plot2)
# patchwork6 + plot_annotation(tag_levels = c('1'), tag_prefix = 'Fig. ',
#                             tag_sep = '.', tag_suffix = ':',
#                             title = 'Graph 6') &
#    theme(plot.tag.position = c(0, 1),
#         plot.tag = element_text(size = 8, hjust = 0, vjust = 0))
```

Blue Nile claims that as you go up in carat weight, other characteristics become more visible, implying that diamonds of higher carat weight, blemishes become more obvious. Therefore, one can assume that buyers and sellers prioritize high clarity for diamonds of a higher carat. Graph 5 shows that the data appears to support this claim only for diamonds with clarity level of Flawless (FL) and do not support the claim for diamonds of a lower clarity level.

### Claim 2

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 3.5, fig.width = 5,fig.align='center'}

claim4plot1 = ggplot(Data, aes(x = clarity, fill = color))+ 
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.title = element_text(size = 10, face = "bold")) +
  geom_bar(position = "fill") +
  labs(title = "Graph 7 \n Distribution of Color for Each Clarity",
       x = "Clarity",
       y = "Proportion of Diamonds",
       fill = "Color") +
  scale_fill_manual(values = c("#EB5F0C", "#DF1E43", "#009FDF", "#FDDA24", "#25CAD3", "#EF3F6B", "#62BB46")) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))

claim4plot1

# Data %>%
#    ggplot(aes(x = clarity, fill = color))+ 
#    geom_bar(position = "fill") +
#     theme(axis.text.x = element_text(angle = 0))+
#     labs(x="Color", y="Percentage of Clarity in Each Color",
#          title="Distribution of Clarity for each Color")
```

**Table 1 - Proportion of Color vs. Clarity Ranking**
```{r,echo=FALSE, warning=FALSE, message=FALSE}
tab <- table(Data$clarity, Data$color)
tab = round(prop.table(tab, 1) * 100, 2)
```

|Table 1   | K | J    | I     | H     | G     | F     | E     | D     |
|------|---|------|-------|-------|-------|-------|-------|-------|
| SI1  | 0 | 6.58 | 14.4  | 11.93 | 16.87 | 17.7  | 14.81 | 17.7  |
| SI2  | 0 | 7.88 | 14.55 | 14.55 | 16.97 | 22.42 | 11.52 | 12.12 |
| VS1  | 0 | 6.87 | 13.3  | 12.02 | 15.45 | 16.31 | 16.31 | 19.74 |
| VS2  | 0 | 7.48 | 9.35  | 12.62 | 16.36 | 19.63 | 20.56 | 14.02 |
| VVS1 | 0 | 9.4  | 14.77 | 12.08 | 16.11 | 17.45 | 13.42 | 16.78 |
| VVS2 | 0 | 8.23 | 17.72 | 9.49  | 17.72 | 15.82 | 11.39 | 19.62 |
| IF   | 0 | 4.08 | 14.29 | 14.29 | 12.24 | 22.45 | 12.24 | 20.41 |
| FL   | 0 | 0    | 0     | 0     | 0     | 33.33 | 0     | 66.67 |

Blue Nile claims that more colorless diamonds are receiving higher grades along the diamond color and clarity scale. To confirm this claim, colorless diamonds (diamonds with color of grades D, E or F) should typically have high clarity. In order to visualize this claim, a bar graph comparing clarity against color and a proportion table in Graph 7 and Table 1 were made. When looking at the graph, it shows that of the highest clarity Flawless (FL) is 100% of diamonds are in the colorless category. It drops when looking at the IF column but there is no distinct pattern of this decreasing when looking at other clarity scores. The claim is supported by the data presented. 

### Claim 3 

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 3.5, fig.width = 5,fig.align='center'}
ggplot((Data) , aes(x=clarity, fill=cut))+
  geom_bar(position = "fill")+
  theme_minimal()+
  scale_x_discrete(limits=c("SI2", "SI1", "VS2", "VS1", "VVS2", "VVS1", "IF", "FL")) +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))  +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12,face = "bold"),
        legend.position = "bottom") +
  scale_fill_manual(values = c("#EB5F0C", "#DF1E43", "#009FDF", "#FDDA24", "#25CAD3", "#EF3F6B", "#62BB46","blue4")) +
  labs(x="Clarity", y="Proportion of Diamonds", 
       title="Graph 8 \n Distribution of Cut for Each Clarity ",
       fill = "Cut")
```

```{r,echo=FALSE, warning=FALSE, message=FALSE}
clarity_cut <- table (Data$clarity, Data$cut)
#clarity_cut
```

**Table 2 - Counts of Clarity vs. Cut, Table 3 - Proportions of Clarity vs. Cut**
```{r,echo=FALSE, warning=FALSE, message=FALSE}
prop_clarity_cut <- round(prop.table(clarity_cut, 1) * 100, 2)
#prop_clarity_cut
```

|Table 2 | Good | Very Good | Ideal | Astor Ideal |Table 3 | Good | Very Good | Ideal | Astor Ideal |
|--------|------|-----------|-------|-------------|--------|------|-----------|-------|-------------|
| SI1    | 19   | 70        | 150   | 4           | SI1    | 7.82 | 28.81     | 61.73 | 1.65        |
| SI2    | 14   | 64        | 86    | 1           | SI2    | 8.48 | 38.79     | 52.12 | 0.61        |
| VS1    | 13   | 78        | 136   | 6           | VS1    | 5.58 | 33.48     | 58.37 | 2.58        |
| VS2    | 13   | 65        | 131   | 5           | VS2    | 6.07 | 30.37     | 61.21 | 2.34        |
| VVS1   | 7    | 42        | 99    | 1           | VVS1   | 4.7  | 28.19     | 66.44 | 0.67        |
| VVS2   | 6    | 50        | 99    | 3           | VVS2   | 3.8  | 31.65     | 62.66 | 1.9         |
| IF     | 1    | 11        | 37    | 0           | IF     | 2.04 | 22.45     | 75.51 | 0           |
| FL     | 0    | 2         | 1     | 0           | FL     | 0    | 66.67     | 33.33 | 0           |


Blue Nile claims that diamond cut can hide flaws in other characteristics. To test this claim, diamond cut was analyzed against diamond clarity. From Blue Nile's claim, the quality of the diamond cut should be higher in diamonds with lower clarity. Based on these rankings and the claim, we should expect to see lower clarity ratings (SI and VS) associated with higher cut quality. From the bar chart we can see that the FL clarity rating only contain the diamond cuts Very Good and Ideal. The second highest clarity rating contain Good, Very Good, and Ideal diamond cuts. The clarity ratings SI2 to VS1 contain diamonds with all four cuts. From the bar chart, this claim appears to be supported by the data. For the purpose of looking at this data, the Astor Ideal cut is ignored in the discussion as there are not many diamond purchases with this cut giving very little data. For the SI2 clarity, 52.12% of the cuts are Ideal which is the second highest cut ranking overall. Except for the Astor Ideal cut, the Good cut has the lowest percentage at 8.48%. The SI1 clarity show similar results with, 61.73% of the cuts being Ideal and the cut of Good has the lowest percentage at 7.82%. For VS2, the Ideal cut is highest at 61.21% and Good was lowest at 6.07. Finally, the VS1 cut has the highest percentage of Ideal cuts at 58.37% and the Good cut was the lowest at 5.58%. From these proportions, the claim that better diamond cuts hide imperfections in the diamond appears to be true. 

### Claim 4 

```{r,echo=FALSE, warning=FALSE, message=FALSE, fig.height = 4, fig.width = 6, fig.align='center' }
carat_.5 <- Data %>% 
  filter(between(carat,.4,.6))

carat_1 <- Data %>% 
  filter(between(carat,.9,1.1))

carat_1.5 <- Data %>% 
  filter(between(carat,1.4,1.6))

carat_2 <- Data %>% 
  filter(between(carat,1.9,2.1))

graph_.5<- ggplot((carat_.5), aes(x=carat, y=price))+
  geom_point(alpha = .5, color = "blue4")+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12,face = "bold"),
        legend.title = element_blank(),
        legend.position = "none") +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray")) +
  labs(x="Carat (0.40-0.60)", y="Price", 
       title="Diamond Carat Against Price")

graph_1<- ggplot((carat_1), aes(x=carat, y=price))+
  geom_point(alpha = .5, color = "blue4")+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12,face = "bold"),
        legend.title = element_blank(),
        legend.position = "none") +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray")) +
  labs(x="Carat (0.90-1.10)", y="Price", 
       title="Diamond Carat Against Price")

graph_1.5<- ggplot((carat_1.5), aes(x=carat, y=price))+
  geom_point(alpha = .5, color = "blue4")+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12,face = "bold"),
        legend.title = element_blank(),
        legend.position = "none") +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray")) +
  labs(x="Carat (1.40-1.60)", y="Price", 
       title="Diamond Carat Against Price")

graph_2<- ggplot((carat_2), aes(x=carat, y=price))+
  geom_point(alpha = .5, color = "blue4")+
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12,face = "bold"),
        legend.title = element_blank(),
        legend.position = "none") +
  theme(#plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))  +
  labs(x="Carat (1.90-2.10)", y="Price", 
       title="Diamond Carat Against Price")

#plot_grid(graph_.5, graph_1, graph_1.5, graph_2, labes = "AUTO", nrow= 2, ncol = 2)

patchwork7 = (graph_.5 | graph_1) / (graph_1.5 | graph_2)
patchwork7 + plot_annotation(tag_levels = c('1'), tag_prefix = 'Fig. ',
                            tag_sep = '.', tag_suffix = ':',
                            title = 'Graph 9') &
   theme(plot.tag.position = c(0, 1),
        plot.tag = element_text(size = 8, hjust = 0, vjust = 0))
```

Blue Nile claims that diamond carat weights that are slightly less (0.4, 0.9, 1.4, 1.9) than typical carat values (0.5, 1.0, 1.5, or 2.0) cost significantly less than getting a typical carat weight. From the data this claim is best supported by lower carat weights such as a half of a carat and a carat. The top two graphs show that a diamond with a carat weight of 0.4 does appear to have a significantly lower cost than diamonds with a carat weight of 0.5. This is further displayed by the second graph which shows a similar trend. The carat weight of 0.9 appears to have a lower price than a carat weight of 1.0. As the carat value continues to increase it becomes more difficult to make assumptions from the graph because there are fewer data points. Therefore for diamonds with a carat value greater than 1.0, it is difficult to see if the data actually supports Blue Nile's claim. As a result, we can say that we can assume their claim appears to be supported for carat values of 1.0 or less, but is inconclusive at higher carat weights. 

# Simple Linear Regression

A simple linear regression model helps to further explore the relationship between the price of a diamond and the diamond's carat. The first step to fitting this model is to see if the relationship between the response variable (price of a diamond) and the predictor variable (the diamond's carat) meet the assumptions for a regression model without any transformations. To make this assessment, a scatter plot, residual plot and ACF plot are created.

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 3, fig.width = 5,fig.align='center'}
ggplot(Data, aes(x = carat, y = price)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12,face = "bold"),
        legend.title = element_blank(),
        legend.position = "none") +
  geom_point(color = "blue4", alpha = 0.7, size = 2)+
  geom_smooth(method=lm,color="#EB5F0C",alpha=0.5,se = FALSE)+
  labs(title = "Graph 10 \nPrice Distribution by Carat",
       x = "Carat",
       y = "Price") +
  scale_y_continuous(labels = scales::comma, breaks = seq(0, max(Data$price), by = 50000)) +
  theme(plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray")) 
```

```{r,echo=FALSE, warning=FALSE, message=FALSE, fig.align='center'}
result<-lm(price~carat, data=Data)
par(mfrow = c(2, 2))
plot(result)
mtext("Graph 11", side = 3, line = - 2, outer = TRUE)
```

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 2.7, fig.width = 5,fig.align='center'}
acf(result$residuals, main = "Graph 12 \nACF of Residuals with No Transformations", ylim = c(-.2, .2))
```

The scatter plot and residual plot indicate that the errors do not have a mean of 0, do not have constant variance, and are not normally distributed. In the "Residuals vs. Fitted" plot, the residuals are not evenly distributed across the horizontal axis. For fitted values less than 100,000, the majority of data points lie below the horizontal axis. Meanwhile, for fitted values over 100,000, the majority of data points lie above the horizontal axis. Thus, the errors do not have a mean of 0. Additionally, the residuals do not have similar vertical variation in the "Residuals vs. Fitted" plot; instead, the variance increases as the fitted values increase. This leads to the conclusion that the errors do not have constant variance. The "Q-Q Residuals" has many data points far from the QQ line, indicating that the errors do not follow a normal distribution. On the other hand, the ACF plot shows that lags greater than zero are mostly insignificant. Therefore, there is no evidence that the data are dependent on each other.

Since some regression assumptions are violated, a transformation of the data is necessary. The response variable should be transformed first since the response variable affects the shape of the relationship and the vertical spread of the data points. 


```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.align='center',fig.height = 2.7, fig.width = 5}
MASS::boxcox(result,lambda = seq(0, 0.5, 0.1))
```

The above box cox plot helps us identify our lambda value for the transformation. Since 1 does not lie in the confidence interval, it is confirmed that a transformation on the response variable is needed. 0 does not lie in the confidence interval, so a log transformation will not be performed initially. Instead, a lambda value of 0.3 is chosen since it lies near the center of the confidence interval.

**Lambda 0.3 Transformed**

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 3, fig.width = 5,fig.align='center'}
ystar1<-(Data$price)**.3
Data<-data.frame(Data,ystar1)
ggplot(Data, aes(x = carat, y = ystar1)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
        axis.text = element_text(size = 8, face = "bold"),
        axis.title = element_text(size = 12,face = "bold"),
        legend.title = element_blank(),
        legend.position = "none") +
  geom_point(color = "blue4", alpha = 0.7, size = 2)+
  geom_smooth(method=lm,color="#EB5F0C",alpha=0.5,se = FALSE)+
  labs(title = "Graph 13 \nPrice^0.3 Distribution by Carat",
       x = "Carat", 
       y = "Price^0.3") +
  #scale_y_continuous(labels = scales::comma, breaks = seq(0, max(Data$price), by = 50000)) +
  theme(plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray")) 
```

```{r,echo=FALSE, warning=FALSE, message=FALSE, fig.align='center'}
result.ystar1<-lm(ystar1~carat, data=Data)
par(mfrow = c(2, 2))
plot(result.ystar1)
mtext("Graph 14", side = 3, line = - 2, outer = TRUE)
```

The transformation on the response variable with lambda = 0.3 does not resolve any of the assumption violations. In the "Residuals vs. Fitted" plot, the residuals remain unevenly distributed across the horizontal axis and the variance increases as the fitted values increase. Furthermore, the "Q-Q Residuals" plot has many data points far from the QQ line. Since this transformation has proven ineffective on its own, the first transformation on the data will be replaced by a log transformation. A log transformation on the response variable is preferred over the lambda = 0.3 transformation so that the estimated coefficients and slope can easily be interpreted. 

**Log y Transformed**

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 3, fig.width = 5,fig.align='center'}
ystar<-log(Data$price)
Data<-data.frame(Data,ystar)

ggplot(Data, aes(x = carat, y = ystar)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
        axis.text = element_text(size = 10, face = "bold"),
        axis.title = element_text(size = 12,face = "bold"),
        legend.title = element_blank(),
        legend.position = "none") +
  geom_point(color = "blue4", alpha = 0.7, size = 2)+
  geom_smooth(method=lm,color="darkorange",alpha=0.5,se = FALSE)+
  labs(title = "Graph 15 \nLog Price Distribution by Carat",
       x = "Carat",
       y = "Log Price") +
  #scale_y_continuous(labels = scales::comma, breaks = seq(0, max(Data$price), by = 50000)) +
  theme(plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray")) 
```

```{r,echo=FALSE, warning=FALSE, message=FALSE, fig.align='center'}
result.ystar<-lm(ystar~carat, data=Data)
par(mfrow = c(2, 2))
plot(result.ystar)
mtext("Graph 16", side = 3, line = - 2, outer = TRUE)
```

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 2.7, fig.width = 5,fig.align='center'}
acf(result.ystar$residuals, main = "Graph 17 \nACF with Log Transformation of y", ylim = c(-.2, .2))
```

The scatter and residual plots indicate that the log transformation on the response variable does not resolve all of the assumption violations either. The "Residual vs. Fitted" plot still displays unevenly distributed residuals across the horizontal axis. In addition, there are multiple data points far from the QQ line in the "Q-Q Residuals" plot. However, the variance remains relatively constant in the "Residuals vs. Fitted" plot. This indicates that the assumption that the errors have constant variance is met. Moreover, the ACF plot indicates that after the log transformation of the response variable, the data remains to appear independent.

**Log x and y Transformed**

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 3, fig.width = 5,fig.align='center'}
xstar<-log(Data$carat)
Data<-data.frame(Data,xstar)

ggplot(Data, aes(x = xstar, y = ystar)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
        axis.text = element_text(size = 10, face = "bold"),
        axis.title = element_text(size = 12,face = "bold"),
        legend.title = element_blank(),
        legend.position = "none") +
  geom_point(color = "blue4", alpha = 0.7, size = 1)+
  geom_smooth(method=lm,color="darkorange",alpha=0.5,se = FALSE)+
  labs(title = "Graph 18 \nLog Price Distribution by Log Carat",
       x = "Log Carat",
       y = "Log Price") +
  #scale_y_continuous(breaks = seq(0, max(Data$price), by = 50000)) +
  theme(plot.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "lightgray"))
```

```{r,echo=FALSE, warning=FALSE, message=FALSE, fig.align='center'}
result.xstar<-lm(ystar~xstar, data=Data)
par(mfrow = c(2, 2))
plot(result.xstar)
mtext("Graph 19", side = 3, line = - 2, outer = TRUE)
```

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.height = 2.7, fig.width = 5,fig.align='center'}
acf(result.xstar$residuals, main = "Graph 20 \nACF LogResponse ~ LogPredictor", ylim = c(-.2, .2))
```

After both the log transformations on the response and predictor variables, the scatter plot and residual plot indicate that the errors have a mean of 0, have constant variance and are normally distributed. The "Residuals vs. Fitted" plot shows that residuals are evenly distributed across the horizontal axis and that the residuals have similar vertical variation. In the "Q-Q Residuals" plot, most data points are close to the QQ line, indicating that the errors follow a normal distribution. The ACF plot shows that lags greater than zero are mostly insignificant, so the data can be assumed to be independent.
```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.align='center',fig.height = 3.5}
#MASS::boxcox(result.xstar,lambda =seq(0, 0.7, 0.1))
```

**Linear Regression Model**

```{r,echo=FALSE, warning=FALSE, message=FALSE,fig.align='center'}
summary(result.xstar)
```

Referring to the transformations performed and the above summary of the regression model, the regression equation to estimate the price of a diamond $\hat{y}$ based on the carat of the diamond $x$ is $log(\hat{y}) = 1.94402log(x)+8.521208$. The scatter plot shows that as the carat of a diamond increases, so does the price of the diamond. The coefficient of the $log(x)$ term, ($1.94402$), is greater than 1, indicating that as the carat of the diamond continues to increase, the price of the diamond increases as a faster rate. This means that the price per carat of the diamond tends to increase as the number of carats increases. Since there are few diamonds on the market over 2 carats, it makes sense that the rarity of diamonds over two carats would sell for a more expensive rate.

To determine the statistical significance of our model, we perform a hypothesis test.

$H_0:$ xstar $= 0$

$H_a:$ xstar $\neq 0$

The null hypothesis is that xstar is equal to $0$ (indicating that carat value has no effect on the price of a diamond and thus, there is no linear association between the variables). The alternative hypothesis is that xstar is not equal to $0$ (indicating that the carat value has an effect on the price of the diamond and there is linear association between the variables).
In order to create an appropriate linear model and not violate assumptions, the $x$ and $y$ variables both are transformed.

The p-value ($<2e-16$ for x.star is much smaller than 0.05, meaning that the null hypothesis of the xstar coefficient being zero, is rejected. The alternative hypothesis that the xstar coefficient that carat has an affect on price is accepted. 
